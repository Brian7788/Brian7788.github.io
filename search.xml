<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql</title>
      <link href="2020/09/14/sql/"/>
      <url>2020/09/14/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="sql基础"><a href="#sql基础" class="headerlink" title="sql基础"></a>sql基础</h1><h2 id="069-连接查询——笛卡尔乘积"><a href="#069-连接查询——笛卡尔乘积" class="headerlink" title="069 连接查询——笛卡尔乘积"></a>069 连接查询——笛卡尔乘积</h2><p>笛卡尔乘积现象：表1有m行，表2有n行，合成表有（m*n）行</p><pre class=" language-mysql"><code class="language-mysql">select * from beauty;select * from boys;select name, boyname from boy,beautywhere beauty.boyfriend_id=boy_id;</code></pre><p>添加有效的连接条件</p><h2 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h2><pre class=" language-mysql"><code class="language-mysql">select job_title,COUNT(*)FROM employees e, jobs jwhere e.job_id=j.job_idgroup by job_titleorder by count(*) Desc;</code></pre><p><img src="/images/sql.assets/image-20200910213616908.png"></p><h2 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h2><p><img src="/images/sql.assets/image-20200910214509444.png"></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>在同一张表中需要在前面加上别名来区分查询的东西</p><p><img src="/images/sql.assets/image-20200910215411358.png"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>应用场景：查询一个表中有另一个表中没有的记录</p><p><img src="/images/sql.assets/image-20200911114155418.png"></p><h2 id="sql99语法"><a href="#sql99语法" class="headerlink" title="sql99语法"></a>sql99语法</h2><p><img src="/images/sql.assets/image-20200911170358758.png" alt="image-20200911170358758"></p><p>同样连接</p><p>内连接包括：等值连接、非等值连接、自连接。</p><p>非等值连接例子</p><p><img src="/images/sql.assets/image-20200911170840537.png" alt="image-20200911170840537"></p><p>查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有，则用null填充</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">b</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token number">b</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> beauty <span class="token number">b</span><span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> boys bo<span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> <span class="token number">b</span><span class="token punctuation">.</span>id<span class="token operator">></span><span class="token number">3</span></code></pre><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p><img src="/images/sql.assets/image-20200911172446880.png" alt="image-20200911172446880"></p><p>where后面加相关子查询</p><p><img src="/images/sql.assets/image-20200911173437211.png" alt="image-20200911173437211"></p><p>查询最低工资大于50号部门最低工资的部门id和其最低工资</p><p>1.查询50号部门的最低工资(标量子查询)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token keyword">where</span> department_id</code></pre><p>2.查询每个部门的最低工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id</code></pre><p>3.合并</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token keyword">having</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> department_id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="列子查询（多行子查询）"><a href="#列子查询（多行子查询）" class="headerlink" title="列子查询（多行子查询）"></a>列子查询（多行子查询）</h2><p>有多行值的情况下</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>IN/NOT IN</td><td>等于列表中的任意一个</td></tr><tr><td>ANY/SOME</td><td>和子查询返回的某一个值比较</td></tr><tr><td>ALL</td><td>和子查询返回的所有值比较</td></tr></tbody></table><p><img src="/images/sql.assets/image-20200911210147928.png" alt="image-20200911210147928"></p><p><img src="/images/sql.assets/image-20200911205616600.png" alt="image-20200911205616600"></p><h2 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h2><p>两个条件相似</p><p><img src="/images/sql.assets/image-20200911210457438.png" alt="image-20200911210457438"></p><h2 id="select-后面的子查询使用"><a href="#select-后面的子查询使用" class="headerlink" title="select 后面的子查询使用"></a>select 后面的子查询使用</h2><p><img src="/images/sql.assets/image-20200911213632769.png" alt="image-20200911213632769"></p><h2 id="from后面的子查询使用"><a href="#from后面的子查询使用" class="headerlink" title="from后面的子查询使用"></a>from后面的子查询使用</h2><p>案例：查询每个部门的平均工资的工资等级</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> ag<span class="token punctuation">,</span>department_id    <span class="token keyword">from</span> employees    <span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">)</span>ag_dep<span class="token keyword">inner</span> <span class="token keyword">join</span> job_grades g<span class="token keyword">on</span> ag_dep<span class="token punctuation">.</span>ag <span class="token operator">between</span> lowest_sal <span class="token operator">and</span> highest_sal</code></pre><p><img src="/images/sql.assets/image-20200912211743064.png" alt="image-20200912211743064"></p><p><strong>取别名可以用于使用子表查询</strong></p><h2 id="exists-后面的子查询"><a href="#exists-后面的子查询" class="headerlink" title="exists 后面的子查询"></a>exists 后面的子查询</h2><p>语法：</p><p>exists(完整的查询语句)</p><p>结果：</p><p>1或0（有值和没值的差别）</p><p>案例</p><p>连接查询</p><p><img src="/images/sql.assets/image-20200912205146812.png" alt="image-20200912205146812"><img src="/images/sql.assets/image-20200912205146843.png" alt="image-20200912205146843"></p><p>exists查询</p><p><img src="/images/sql.assets/image-20200912205202855.png" alt="image-20200912205202855"></p><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p><img src="/images/sql.assets/image-20200912212557827.png" alt="image-20200912212557827"></p><p>案例1：查询前五条员工信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
