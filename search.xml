<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL基础(一）</title>
      <link href="2020/10/12/mysql-0/"/>
      <url>2020/10/12/mysql-0/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql常见命令"><a href="#mysql常见命令" class="headerlink" title="mysql常见命令"></a>mysql常见命令</h2><p><img src="/images/mysql-0.assets/wps1.jpg" alt="img"></p><h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><pre class=" language-mysql"><code class="language-mysql">select 查询列表 from 表名;</code></pre><p>特点：</p><p>1、 查询列表可以是：表中的字段、常量值、表达式、函数</p><p>2、查询的结果是一个虚拟的表格</p><h3 id="mysql中-号与Java中的对比"><a href="#mysql中-号与Java中的对比" class="headerlink" title="mysql中+号与Java中的对比"></a>mysql中+号与Java中的对比</h3><p><img src="/images/mysql-0.assets/wps2.jpg" alt="img"></p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p><img src="/images/mysql-0.assets/wps5.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps6-1602330324265.jpg" alt="img"></p><h3 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h3><p><img src="/images/mysql-0.assets/wps6-1602330343190.jpg" alt="img"></p><h4 id="between-and的使用"><a href="#between-and的使用" class="headerlink" title="between and的使用"></a>between and的使用</h4><p><img src="/images/mysql-0.assets/wps7.jpg" alt="img"></p><p>相当于大于等于100小于等于120</p><h4 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h4><pre class=" language-mysql"><code class="language-mysql">select distinct 字段名 from 表名;</code></pre><h4 id="、concat函数-和ifnull函数"><a href="#、concat函数-和ifnull函数" class="headerlink" title="+、concat函数 和ifnull函数"></a>+、concat函数 和ifnull函数</h4><p><img src="/images/mysql-0.assets/wps8.jpg" alt="img"></p><h3 id="cancat函数"><a href="#cancat函数" class="headerlink" title="cancat函数"></a>cancat函数</h3><p>语法:</p><pre class=" language-mysql"><code class="language-mysql">用于拼接字段concat('a','b','c')</code></pre><p><img src="/images/mysql-0.assets/wps3.jpg" alt="img"></p><h3 id="ifnull函数"><a href="#ifnull函数" class="headerlink" title="ifnull函数"></a>ifnull函数</h3><p>例：</p><p>判断奖金是否为NULL，如为NULL，返回0</p><p><img src="/images/mysql-0.assets/wps4.jpg" alt="img"></p><h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p><img src="/images/mysql-0.assets/wps9.jpg" alt="img"></p><h2 id="补充：字符函数"><a href="#补充：字符函数" class="headerlink" title="补充：字符函数"></a><strong>补充</strong>：字符函数</h2><p>一般只有length是算字节数（汉字是三个字节）</p><p>其他函数都是算长度（字符数）</p><p><img src="/images/mysql-0.assets/wps10.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps11.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps12.jpg" alt="img"></p><p>trim 去掉前后字符串</p><p><img src="/images/mysql-0.assets/wps13.jpg" alt="img"></p><h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><p><img src="/images/mysql-0.assets/wps14.jpg" alt="img"></p><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><pre class=" language-mysql"><code class="language-mysql">now 返回当前系统日期+时间cerdate 返回当前系统日期，不包含时间curtime 返回当前时间，不包含日期year()month()返回年月str_to_date('9-13-1999','%m-%d-%Y'):将日期格式的字符转换成指定格式的日期（转换符号见下表）data_format():将日期转换成字符</code></pre><p><img src="/images/mysql-0.assets/image-20201010200316542.png" alt="image-20201010200316542"></p><h2 id="流程控制函数——if、case"><a href="#流程控制函数——if、case" class="headerlink" title="流程控制函数——if、case"></a>流程控制函数——if、case</h2><p><img src="/images/mysql-0.assets/wps15.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps16.jpg" alt="img"></p><p>（等于时成立）</p><p><img src="/images/mysql-0.assets/wps17.jpg" alt="img"></p><p>（范围内成立）</p><h2 id="简单函数"><a href="#简单函数" class="headerlink" title="简单函数"></a>简单函数</h2><p><img src="/images/mysql-0.assets/wps18.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps19.jpg" alt="img"></p><p><img src="/images/mysql-0.assets/wps20.jpg" alt="img"></p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p>语法：</p><p><img src="/images/mysql-0.assets/wps21.jpg" alt="img"></p><p>案例：</p><p><img src="/images/mysql-0.assets/wps22.jpg" alt="img"></p><p>复杂的分组查询案例（先写“的”前面，后面的用Having加（分组后筛选的内容））</p><p><img src="/images/mysql-0.assets/wps23.jpg" alt="img"></p><p>案例2：</p><p><img src="/images/mysql-0.assets/wps24.jpg" alt="img"></p><h2 id="连接查询——笛卡尔乘积"><a href="#连接查询——笛卡尔乘积" class="headerlink" title="连接查询——笛卡尔乘积"></a>连接查询——笛卡尔乘积</h2><p>笛卡尔乘积现象：表1有m行，表2有n行，合成表有（m*n）行</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> beauty<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> boys<span class="token punctuation">;</span><span class="token keyword">select</span> name<span class="token punctuation">,</span> boyname <span class="token keyword">from</span> boy<span class="token punctuation">,</span>beauty<span class="token keyword">where</span> beauty<span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>boy_id<span class="token punctuation">;</span></code></pre><p>添加有效的连接条件</p><h2 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> job_title<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">FROM</span> employees <span class="token number">e</span><span class="token punctuation">,</span> jobs j<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token keyword">group</span> <span class="token keyword">by</span> job_title<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">Desc</span><span class="token punctuation">;</span></code></pre><p><img src="/images/mysql-0.assets/image-20200910213616908.png" alt="image-20200910213616908"></p><h2 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h2><p><img src="/images/mysql-0.assets/image-20200910214509444.png" alt="image-20200910214509444"></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>在同一张表中需要在前面加上别名来区分查询的东西</p><p><img src="/images/mysql-0.assets/image-20200910215411358.png" alt="image-20200910215411358"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>应用场景：查询一个表中有另一个表中没有的记录</p><p><img src="/images/mysql-0.assets/image-20200915200148813.png" alt="image-20200915200148813"></p><p><img src="/images/mysql-0.assets/image-20200911114155418.png" alt="image-20200911114155418"></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基础(三)</title>
      <link href="2020/09/21/MySQL2/"/>
      <url>2020/09/21/MySQL2/</url>
      
        <content type="html"><![CDATA[<h2 id="子查询总结（还需添加p98）"><a href="#子查询总结（还需添加p98）" class="headerlink" title="子查询总结（还需添加p98）"></a>子查询总结（还需添加p98）</h2><p>要观察子查询的内容属于（列子查询还是标量子查询）</p><p>从而选择（IN，NOT IN….) 还是（=）</p><p>其实IN是无敌的</p><p>查询平均工资最低的部门信息和该部门的平均工资</p><pre class=" language-mysql"><code class="language-mysql">select d.*,agfrom (    select avg(salary) ag,department_id    from employees    group by department_id    order by avg(salary)    limit 1) ag_depon d.department_id=ag_dep.department_id</code></pre><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><p>将多条查询语句的结果合并成一个结果</p><p>应用场景：要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时。</p><p>语法</p><pre class=" language-sql"><code class="language-sql">查询语句<span class="token number">1</span><span class="token keyword">union</span>查询语句<span class="token number">2</span><span class="token keyword">union</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span></code></pre><p>案例：查询中国用户中男性的信息以及外国用户中年男性的用户信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>csex <span class="token keyword">from</span> t_ca <span class="token keyword">where</span> csex<span class="token operator">=</span><span class="token string">'男'</span><span class="token keyword">union</span><span class="token keyword">select</span> t_id<span class="token punctuation">,</span>tNmae<span class="token punctuation">,</span>tGender <span class="token keyword">from</span> t_ua <span class="token keyword">where</span> tGender<span class="token operator">=</span><span class="token string">'male'</span><span class="token punctuation">;</span></code></pre><p>注：结尾分号</p><ol><li><p>联合查询的列数必须一致</p></li><li><p>要求多条查询语句的查询的每一列的类型和顺序最好一致</p></li><li><p>union关键字是自动去重，union all 可以显示所有</p></li></ol><h2 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h2><p>插入、修改、删除操作</p><h3 id="插入语法"><a href="#插入语法" class="headerlink" title="插入语法"></a>插入语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名（列<span class="token number">1</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>）<span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span>，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code></pre><p>注：</p><ol><li><p>插入的值的类型要与列的类型一致或兼容</p></li><li><p>不可以为null的列必须插入值，可以为null的列如何插入值？</p></li><li><p>列的顺序可以颠倒，只要值一一对应</p></li><li><p>列和值的个数必须一致</p></li><li><p>可以省略列名，默认所有列，而且列的顺序和表中的列的顺序一致</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'119'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">)</span></code></pre><p>问题2：</p><ol><li>方式一：插入一个null值</li><li>方式二：直接在插入时把不写列名</li></ol></li></ol><p>方式二语法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> 表名<span class="token keyword">set</span> 列名<span class="token operator">=</span>值，列名<span class="token operator">=</span>值<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p>方式一支持多行插入，也支持子查询</p><p><img src="/images/MySQL2.assets/image-20200917114520022.png" alt="image-20200917114520022"></p><h3 id="修改语法"><a href="#修改语法" class="headerlink" title="修改语法"></a>修改语法</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> 表名<span class="token keyword">set</span> 列名<span class="token operator">=</span>新值，列名<span class="token operator">=</span>新值<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">where</span> 筛选条件<span class="token punctuation">;</span></code></pre><p>案例1：修改beauty表中姓唐的女神的电话为138921837912</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> beauty <span class="token keyword">set</span> phone<span class="token operator">=</span><span class="token string">'138921837912'</span><span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'唐%'</span>；</code></pre><p>修改多表语法(sql99)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> 表<span class="token number">1</span> 别名<span class="token keyword">inner</span><span class="token operator">|</span><span class="token keyword">left</span><span class="token operator">|</span><span class="token keyword">right</span> <span class="token keyword">join</span> 表<span class="token number">2</span> 别名<span class="token keyword">on</span> 连接条件<span class="token keyword">set</span> 列<span class="token operator">=</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">where</span> 筛选条件</code></pre><p>案例：修改没有男朋友的女神的男朋友编号都为2号</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">update</span> boys bo<span class="token keyword">right</span> <span class="token keyword">join</span> beauty <span class="token keyword">on</span> bo<span class="token punctuation">.</span>id<span class="token operator">=</span><span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token keyword">set</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span><span class="token number">2</span><span class="token keyword">where</span> bo<span class="token punctuation">.</span>id <span class="token operator">is</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span></code></pre><h3 id="删除语句"><a href="#删除语句" class="headerlink" title="删除语句"></a>删除语句</h3><p>单表的删除语法</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 筛选条件</code></pre><p>多表的删除语法</p><pre class=" language-mysql"><code class="language-mysql">truncate table 表名(清空数据)</code></pre><p>或</p><pre class=" language-mysql"><code class="language-mysql">delete 表1的别名，表2的别名(看要删哪个表自己选)from 表1 别名inner|left|right join 表2 别名 on 连接条件where 筛选条件;</code></pre><p>案例：删除手机号以9结尾的女神信息</p><pre class=" language-mysql"><code class="language-mysql">delete from beauty where phone like '%9';</code></pre><p><img src="/images/MySQL2.assets/image-20200917214712355.png" alt="image-20200917214712355"></p><h2 id="DDL语言"><a href="#DDL语言" class="headerlink" title="DDL语言"></a>DDL语言</h2><p>数据定义语言</p><p>库与表的管理</p><h3 id="库的管理"><a href="#库的管理" class="headerlink" title="库的管理"></a>库的管理</h3><h4 id="库的创建"><a href="#库的创建" class="headerlink" title="库的创建"></a>库的创建</h4><p>语法(可以加一个判断)</p><pre class=" language-mysql"><code class="language-mysql">create database [if not exists] 库名</code></pre><h4 id="库的修改"><a href="#库的修改" class="headerlink" title="库的修改"></a>库的修改</h4><p>没有直接的sql语句，可以改文件夹的名字</p><p><strong>更改库的字符集</strong></p><pre class=" language-mysql"><code class="language-mysql">alter database books character set gbk</code></pre><h4 id="库的删除"><a href="#库的删除" class="headerlink" title="库的删除"></a>库的删除</h4><pre class=" language-mysql"><code class="language-mysql">drop database [if exists] books</code></pre><h3 id="表的管理"><a href="#表的管理" class="headerlink" title="表的管理"></a>表的管理</h3><h4 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h4><pre class=" language-mysql"><code class="language-mysql">create table 表名(    列名 列的类型[(长度) 约束],    列名 列的类型[(长度) 约束],    列名 列的类型[(长度) 约束],    ...    列名 列的类型[(长度) 约束])</code></pre><p><img src="/images/MySQL2.assets/image-20200919135425260.png" alt="image-20200919135425260"></p><h4 id="表的修改"><a href="#表的修改" class="headerlink" title="表的修改"></a>表的修改</h4><pre class=" language-mysql"><code class="language-mysql">alter table 表名 add(加类型)|drop|modify(类型或约束) column 列名 类型 约束</code></pre><pre class=" language-mysql"><code class="language-mysql">alter table 原表名 rename to 新表名</code></pre><pre class=" language-mysql"><code class="language-mysql">alter table 表名 change column 原列名 新列名 类型</code></pre><h4 id="表的删除"><a href="#表的删除" class="headerlink" title="表的删除"></a>表的删除</h4><pre class=" language-mysql"><code class="language-mysql">drop table if exists book_author</code></pre><p><img src="/images/MySQL2.assets/image-20200919143141744.png" alt="image-20200919143141744"></p><h4 id="表的复制"><a href="#表的复制" class="headerlink" title="表的复制"></a>表的复制</h4><p>仅仅复制表的结构</p><pre class=" language-mysql"><code class="language-mysql">create table copy like author</code></pre><p>复制表的结构+数据</p><pre class=" language-mysql"><code class="language-mysql">create table copy2select * from author;</code></pre><p>只复制部分数据</p><pre class=" language-mysql"><code class="language-mysql">create table copy3select id,au_namefrom authorwhere nation='中国';</code></pre><p>仅仅复制某些字段</p><pre class=" language-mysql"><code class="language-mysql">create table copy4select id,au_namefrom authorwhere 0;\表示恒不成立</code></pre><p>案例（可以跨库复制表结构）</p><p><img src="/images/MySQL2.assets/image-20200919144556353.png" alt="image-20200919144556353"></p><p>myemmployees.departments,点之前的指的是库名</p><h2 id="整形"><a href="#整形" class="headerlink" title="整形"></a>整形</h2><p>分类：</p><pre class=" language-mysql"><code class="language-mysql">tinyint ,smallint,mediumint,(int,integer),bigint</code></pre><p>特点：</p><ol><li>如果不设置无符号还是有符号，默认是有符号，如果想设置无符号，需要添加unsigned关键字</li><li>如果插入的数值超出了整形的范围，会报out of range异常，插入的值就是临界值</li><li>如果不设置长度，会有默认的长度（显示结果的宽度）zerofill关键字可以用于填充0，填充到设置的宽度为止</li></ol><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p>分类</p><pre class=" language-mysql"><code class="language-mysql">浮点型float(M,D)double(M,D)定点型dec(M,D)decimal(M,D)</code></pre><p>特点：</p><ol><li>M：整数部分+小数部分</li><li>D：小数部分</li></ol><p>如果超过输出临界值</p><p>M,D都可以省略</p><ol><li><p>如果是decimal，则M默认是10，D默认是0</p></li><li><p>如果是float和double，则会根据插入的数值的精度来决定精度</p></li></ol><p>定点数精度较高</p><h2 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h2><pre class=" language-mysql"><code class="language-mysql">较短的文本(最大的字符数)char(M)varchar(M)较长的文本：textblob枚举插入(不在括号内的不行     大小写都可以，但输出都是小写)enum('a','b','c')set('a','b','c','d')</code></pre><p><img src="/images/MySQL2.assets/image-20200920124955523.png" alt="image-20200920124955523"></p><p>set使用</p><p><img src="/images/MySQL2.assets/image-20200920125334368.png" alt="image-20200920125334368">    结果：</p><p><img src="/images/MySQL2.assets/image-20200920125411087.png" alt="image-20200920125411087"></p><h2 id="日期型"><a href="#日期型" class="headerlink" title="日期型"></a>日期型</h2><p><img src="/images/MySQL2.assets/image-20200920125907207.png" alt="image-20200920125907207"></p><p><img src="/images/MySQL2.assets/image-20200920125946408.png" alt="image-20200920125946408"></p><p>datetime 和timestamp 的区别</p><p><img src="/images/MySQL2.assets/image-20200920125614727.png" alt="image-20200920125614727"></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基础(二)</title>
      <link href="2020/09/14/MySQL/"/>
      <url>2020/09/14/MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="sql基础"><a href="#sql基础" class="headerlink" title="sql基础"></a>sql基础</h1><h2 id="069-连接查询——笛卡尔乘积"><a href="#069-连接查询——笛卡尔乘积" class="headerlink" title="069 连接查询——笛卡尔乘积"></a>069 连接查询——笛卡尔乘积</h2><p>笛卡尔乘积现象：表1有m行，表2有n行，合成表有（m*n）行</p><pre class=" language-mysql"><code class="language-mysql">select * from beauty;select * from boys;select name, boyname from boy,beautywhere beauty.boyfriend_id=boy_id;</code></pre><p>添加有效的连接条件</p><h2 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h2><pre class=" language-mysql"><code class="language-mysql">select job_title,COUNT(*)FROM employees e, jobs jwhere e.job_id=j.job_idgroup by job_titleorder by count(*) Desc;</code></pre><p><img src="/images/sql.assets/image-20200910213616908.png"></p><h2 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h2><p><img src="/images/sql.assets/image-20200910214509444.png"></p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>在同一张表中需要在前面加上别名来区分查询的东西</p><p><img src="/images/sql.assets/image-20200910215411358.png"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>应用场景：查询一个表中有另一个表中没有的记录</p><p><img src="/images/sql.assets/image-20200911114155418.png"></p><h2 id="sql99语法"><a href="#sql99语法" class="headerlink" title="sql99语法"></a>sql99语法</h2><p><img src="/images/sql.assets/image-20200911170358758.png" alt="image-20200911170358758"></p><p>同样连接</p><p>内连接包括：等值连接、非等值连接、自连接。</p><p>非等值连接例子</p><p><img src="/images/sql.assets/image-20200911170840537.png" alt="image-20200911170840537"></p><p>查询编号&gt;3的女神的男朋友信息，如果有则列出详细，如果没有，则用null填充</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">b</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token number">b</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> beauty <span class="token number">b</span><span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> boys bo<span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> <span class="token number">b</span><span class="token punctuation">.</span>id<span class="token operator">></span><span class="token number">3</span></code></pre><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p><img src="/images/sql.assets/image-20200911172446880.png" alt="image-20200911172446880"></p><p>where后面加相关子查询</p><p><img src="/images/sql.assets/image-20200911173437211.png" alt="image-20200911173437211"></p><p>查询最低工资大于50号部门最低工资的部门id和其最低工资</p><p>1.查询50号部门的最低工资(标量子查询)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token keyword">where</span> department_id</code></pre><p>2.查询每个部门的最低工资</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id</code></pre><p>3.合并</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token keyword">having</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> department_id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="列子查询（多行子查询）"><a href="#列子查询（多行子查询）" class="headerlink" title="列子查询（多行子查询）"></a>列子查询（多行子查询）</h2><p>有多行值的情况下</p><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>IN/NOT IN</td><td>等于列表中的任意一个</td></tr><tr><td>ANY/SOME</td><td>和子查询返回的某一个值比较</td></tr><tr><td>ALL</td><td>和子查询返回的所有值比较</td></tr></tbody></table><p><img src="/images/sql.assets/image-20200911210147928.png" alt="image-20200911210147928"></p><p><img src="/images/sql.assets/image-20200911205616600.png" alt="image-20200911205616600"></p><h2 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h2><p>两个条件相似</p><p><img src="/images/sql.assets/image-20200911210457438.png" alt="image-20200911210457438"></p><h2 id="select-后面的子查询使用"><a href="#select-后面的子查询使用" class="headerlink" title="select 后面的子查询使用"></a>select 后面的子查询使用</h2><p><img src="/images/sql.assets/image-20200911213632769.png" alt="image-20200911213632769"></p><h2 id="from后面的子查询使用"><a href="#from后面的子查询使用" class="headerlink" title="from后面的子查询使用"></a>from后面的子查询使用</h2><p>案例：查询每个部门的平均工资的工资等级</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> ag<span class="token punctuation">,</span>department_id    <span class="token keyword">from</span> employees    <span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">)</span>ag_dep<span class="token keyword">inner</span> <span class="token keyword">join</span> job_grades g<span class="token keyword">on</span> ag_dep<span class="token punctuation">.</span>ag <span class="token operator">between</span> lowest_sal <span class="token operator">and</span> highest_sal</code></pre><p><img src="/images/sql.assets/image-20200912211743064.png" alt="image-20200912211743064"></p><p><strong>取别名可以用于使用子表查询</strong></p><h2 id="exists-后面的子查询"><a href="#exists-后面的子查询" class="headerlink" title="exists 后面的子查询"></a>exists 后面的子查询</h2><p>语法：</p><p>exists(完整的查询语句)</p><p>结果：</p><p>1或0（有值和没值的差别）</p><p>案例</p><p>连接查询</p><p><img src="/images/sql.assets/image-20200912205146812.png" alt="image-20200912205146812"><img src="/images/sql.assets/image-20200912205146843.png" alt="image-20200912205146843"></p><p>exists查询</p><p><img src="/images/sql.assets/image-20200912205202855.png" alt="image-20200912205202855"></p><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p><img src="/images/sql.assets/image-20200912212557827.png" alt="image-20200912212557827"></p><p>案例1：查询前五条员工信息</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
